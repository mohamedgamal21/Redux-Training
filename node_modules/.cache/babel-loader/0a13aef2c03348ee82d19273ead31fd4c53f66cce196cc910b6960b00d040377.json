{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://adv-redux-d7de6-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'fetching cart data failed'\n      }));\n    }\n    ;\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending',\n      message: 'sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://adv-redux-d7de6-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          item: cart.items\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'sent cart data succeefully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","item","items"],"sources":["E:/mohamed/my_projects/React.js training/ADV Redux/ADV Redux/src/components/store/cart-acions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://adv-redux-d7de6-default-rtdb.firebaseio.com/cart.json')\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Could not fetch cart data!');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatch(cartActions.replaceCart(cartData));\r\n        } catch (error) {\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                    status: 'error',\r\n                    title: 'Error',\r\n                    message: 'fetching cart data failed',\r\n                })\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotification({\r\n                status: 'pending',\r\n                title: 'Sending',\r\n                message: 'sending cart data!'\r\n            })\r\n        );\r\n        \r\n        const sendRequest = async () => {\r\n            const response = await fetch(\r\n                'https://adv-redux-d7de6-default-rtdb.firebaseio.com/cart.json',\r\n                {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify({item: cart.items}),\r\n                }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Sending cart data failed')\r\n            }\r\n        }\r\n\r\n        try {\r\n            await sendRequest();\r\n\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                status: 'success',\r\n                title: 'Success!',\r\n                message: 'sent cart data succeefully!'\r\n                })\r\n            )\r\n        } catch (error) {\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'sending cart data failed!'\r\n                })\r\n            )\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,CAAC;MAE7F,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZV,QAAQ,CACJH,SAAS,CAACc,gBAAgB,CAAC;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACb,CAAC,CACL,CAAC;IACL;IAAC;EACL,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOhB,QAAQ,IAAK;IACvBA,QAAQ,CACJH,SAAS,CAACc,gBAAgB,CAAC;MACvBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE;IACb,CAAC,CACL,CAAC;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CACxB,+DAA+D,EAC/D;QACIe,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,IAAI,EAAEN,IAAI,CAACO;QAAK,CAAC;MAC3C,CACJ,CAAC;MAED,IAAI,CAACrB,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC;IAED,IAAI;MACA,MAAMY,WAAW,CAAC,CAAC;MAEnBjB,QAAQ,CACJH,SAAS,CAACc,gBAAgB,CAAC;QAC3BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACT,CAAC,CACL,CAAC;IACL,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZV,QAAQ,CACJH,SAAS,CAACc,gBAAgB,CAAC;QAC3BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACT,CAAC,CACL,CAAC;IACL;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}