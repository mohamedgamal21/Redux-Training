{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    item: [],\n    itemQuantity: 0\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      // Check if the item already exists in the cart\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (existingItem) {\n        // If item exists, update the quantity\n        existingItem.quantity += newItem.quantity;\n      } else {\n        // If item does not exist, add it to the cart\n        state.items.push(newItem);\n      }\n    },\n    increment(state, action) {\n      const itemId = action.payload;\n      // Find the item in the cart\n      const item = state.items.find(item => item.id === itemId);\n      if (item) {\n        // Increase the item's quantity by 1\n        item.quantity += 1;\n      }\n    },\n    decrement(state, action) {\n      const itemId = action.payload;\n      // Find the item in the cart\n      const item = state.items.find(item => item.id === itemId);\n      if (item && item.quantity > 0) {\n        // Decrease the item's quantity by 1, ensuring it doesn't go below zero\n        item.quantity -= 1;\n      }\n    }\n  }\n  // reducers: {\n  //     addItem(state, action) {\n  //         state.cart = state.cart + action.payload\n  //     },\n  //     increment(state) {\n  //         state.cart++;\n  //     },\n  //     decrement(state) {\n  //         state.cart--;\n  //     }\n  // }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","item","itemQuantity","reducers","addItem","state","action","newItem","payload","existingItem","items","find","id","quantity","push","increment","itemId","decrement","cartActions","actions"],"sources":["E:/mohamed/my_projects/React.js training/ADV Redux/ADV Redux/src/components/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        item: [],\r\n        itemQuantity: 0\r\n    }, \r\n    reducers: {\r\n        addItem(state, action) {\r\n            const newItem = action.payload;\r\n            // Check if the item already exists in the cart\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            if (existingItem) {\r\n                // If item exists, update the quantity\r\n                existingItem.quantity += newItem.quantity;\r\n            } else {\r\n                // If item does not exist, add it to the cart\r\n                state.items.push(newItem);\r\n            }\r\n        },\r\n        increment(state, action) {\r\n            const itemId = action.payload;\r\n            // Find the item in the cart\r\n            const item = state.items.find(item => item.id === itemId);\r\n            if (item) {\r\n                // Increase the item's quantity by 1\r\n                item.quantity += 1;\r\n            }\r\n        },\r\n        decrement(state, action) {\r\n            const itemId = action.payload;\r\n            // Find the item in the cart\r\n            const item = state.items.find(item => item.id === itemId);\r\n            if (item && item.quantity > 0) {\r\n                // Decrease the item's quantity by 1, ensuring it doesn't go below zero\r\n                item.quantity -= 1;\r\n            }\r\n        }\r\n    }\r\n    // reducers: {\r\n    //     addItem(state, action) {\r\n    //         state.cart = state.cart + action.payload\r\n    //     },\r\n    //     increment(state) {\r\n    //         state.cart++;\r\n    //     },\r\n    //     decrement(state) {\r\n    //         state.cart--;\r\n    //     }\r\n    // }\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACNC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACK,KAAK,CAACC,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACW,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrE,IAAIH,YAAY,EAAE;QACd;QACAA,YAAY,CAACI,QAAQ,IAAIN,OAAO,CAACM,QAAQ;MAC7C,CAAC,MAAM;QACH;QACAR,KAAK,CAACK,KAAK,CAACI,IAAI,CAACP,OAAO,CAAC;MAC7B;IACJ,CAAC;IACDQ,SAASA,CAACV,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMU,MAAM,GAAGV,MAAM,CAACE,OAAO;MAC7B;MACA,MAAMP,IAAI,GAAGI,KAAK,CAACK,KAAK,CAACC,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACW,EAAE,KAAKI,MAAM,CAAC;MACzD,IAAIf,IAAI,EAAE;QACN;QACAA,IAAI,CAACY,QAAQ,IAAI,CAAC;MACtB;IACJ,CAAC;IACDI,SAASA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMU,MAAM,GAAGV,MAAM,CAACE,OAAO;MAC7B;MACA,MAAMP,IAAI,GAAGI,KAAK,CAACK,KAAK,CAACC,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACW,EAAE,KAAKI,MAAM,CAAC;MACzD,IAAIf,IAAI,IAAIA,IAAI,CAACY,QAAQ,GAAG,CAAC,EAAE;QAC3B;QACAZ,IAAI,CAACY,QAAQ,IAAI,CAAC;MACtB;IACJ;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMK,WAAW,GAAGpB,SAAS,CAACqB,OAAO;AAE5C,eAAerB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}