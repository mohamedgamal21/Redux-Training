{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    itemQuantity: 0\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        // Increase the item's quantity by 1\n        item.quantity += 1;\n      }\n    },\n    decrement(state, action) {\n      const itemId = action.payload;\n      // Find the item in the cart\n      const item = state.items.find(item => item.id === itemId);\n      if (item && item.quantity > 0) {\n        // Decrease the item's quantity by 1, ensuring it doesn't go below zero\n        item.quantity -= 1;\n      }\n    }\n  }\n  // reducers: {\n  //     addItem(state, action) {\n  //         state.cart = state.cart + action.payload\n  //     },\n  //     increment(state) {\n  //         state.cart++;\n  //     },\n  //     decrement(state) {\n  //         state.cart--;\n  //     }\n  // }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","itemQuantity","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart","decrement","cartActions","actions"],"sources":["E:/mohamed/my_projects/React.js training/ADV Redux/ADV Redux/src/components/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        itemQuantity: 0\r\n    }, \r\n    reducers: {\r\n        addItem(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === newItem.id);\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    itemId: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                });\r\n            } else {\r\n                existingItem.quantity = existingItem.quantity + 1;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === id);\r\n            if (existingItem.quantity === 1) {\r\n                // Increase the item's quantity by 1\r\n                item.quantity += 1;\r\n            }\r\n        },\r\n        decrement(state, action) {\r\n            const itemId = action.payload;\r\n            // Find the item in the cart\r\n            const item = state.items.find(item => item.id === itemId);\r\n            if (item && item.quantity > 0) {\r\n                // Decrease the item's quantity by 1, ensuring it doesn't go below zero\r\n                item.quantity -= 1;\r\n            }\r\n        }\r\n    }\r\n    // reducers: {\r\n    //     addItem(state, action) {\r\n    //         state.cart = state.cart + action.payload\r\n    //     },\r\n    //     increment(state) {\r\n    //         state.cart++;\r\n    //     },\r\n    //     decrement(state) {\r\n    //         state.cart--;\r\n    //     }\r\n    // }\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACNC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAI,CAACH,YAAY,EAAE;QACfJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACbC,MAAM,EAAEP,OAAO,CAACK,EAAE;UAClBG,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEV,OAAO,CAACQ,KAAK;UACzBhB,IAAI,EAAEQ,OAAO,CAACW;QAClB,CAAC,CAAC;MACN,CAAC,MAAM;QACHT,YAAY,CAACO,QAAQ,GAAGP,YAAY,CAACO,QAAQ,GAAG,CAAC;QACjDP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGV,OAAO,CAACQ,KAAK;MACrE;IACJ,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/D,IAAIH,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC7B;QACAL,IAAI,CAACK,QAAQ,IAAI,CAAC;MACtB;IACJ,CAAC;IACDI,SAASA,CAACf,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMQ,MAAM,GAAGR,MAAM,CAACE,OAAO;MAC7B;MACA,MAAMG,IAAI,GAAGN,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKE,MAAM,CAAC;MACzD,IAAIH,IAAI,IAAIA,IAAI,CAACK,QAAQ,GAAG,CAAC,EAAE;QAC3B;QACAL,IAAI,CAACK,QAAQ,IAAI,CAAC;MACtB;IACJ;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMK,WAAW,GAAGvB,SAAS,CAACwB,OAAO;AAE5C,eAAexB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}